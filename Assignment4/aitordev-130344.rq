PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#> 
PREFIX pr: <http://GP-onto.fi.upm.es/exercise2#> 

#   1. Get all the classes
SELECT ?cl WHERE { ?cl a rdfs:Class. }

#   2. Get all the subclasses of the class Establishment
SELECT ?scl WHERE { ?scl rdfs:subClassOf pr:Establishment. }

#   3. Get all instances of the class City
SELECT ?ins WHERE { ?ins rdf:type pr:City. } 

#   4. Get the number of inhabitants of Santiago de Compostela
SELECT ?nsc WHERE { pr:Santiago_de_Compostela pr:hasInhabitantNumber ?nsc.+ }

#   5. Get the number of inhabitants of Santiago de Compostela and Arzua
SELECT ?nsc WHERE { { pr:Santiago_de_Compostela pr:hasInhabitantNumber ?nsc. } UNION { pr:Arzua pr:hasInhabitantNumber ?nsc. }

#   6. Get all places, together with the number of inhabitants, ordered by the place name (ascending)
SELECT ?place ?num WHERE { $loc pr:hasInhabitantNumber ?num; rdfs:label ?num. } ORDER BY ASC(?place)

#   7. Get all instances of Locality together with their number of inhabitants (if this information exists)
SELECT ?loc ?num WHERE { $loc a pr:Locality; rdfs:label ?num. OPTIONAL {$loc
pr:hasInhabitantNumber ?num. } }

#   8. Get all places with more than 200.000 inhabitants


#   9. Get postal address data for Pazo_Breogan (street, number, locality, province)


#   10. Get all subclasses of class Location


#   11. Get all instances of class Locality


#   12. Describe the resource with rdfs:label "Madrid”


#   13. Construct a graph that relates directly all touristic places with their provinces, using a new property called ”isIn”


#   14. Check whether there is any instance of Town

